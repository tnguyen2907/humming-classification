Two songs: ['Frozen', 'Hakuna']
	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.8484848484848485

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.8585858585858586

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.8821548821548821

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.8518518518518519



Three songs: ['Frozen', 'Hakuna', 'Potter']
	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.7750556792873051

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.7616926503340757

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9992570579494799
		Test accuracy: 0.7661469933184856

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.7572383073496659

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.7706013363028953

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.755011135857461

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.7616926503340757

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.7572383073496659

	MLPClassifier(hidden_layer_sizes=[(700, 700), (700, 70), (700, 7), (700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 1.0
		Test accuracy: 0.7817371937639198



Five songs: ['Frozen', 'Hakuna', 'Potter', 'Panther', 'StarWars']
	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9995557529986673
		Test accuracy: 0.5339547270306259

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9995557529986673
		Test accuracy: 0.5765645805592543

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.21101732563305198
		Test accuracy: 0.1677762982689747

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9755664149266993
		Test accuracy: 0.459387483355526

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9475788538427365
		Test accuracy: 0.49533954727030627

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9746779209240337
		Test accuracy: 0.5366178428761651

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9964460239893381
		Test accuracy: 0.5765645805592543

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9906708129720124
		Test accuracy: 0.5699067909454061

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9986672589960017
		Test accuracy: 0.5792276964047937

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9964460239893381
		Test accuracy: 0.5392809587217043

	MLPClassifier(hidden_layer_sizes=[(700, 70, 7), (700, 700, 70), (700, 700, 7), (700, 350, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700), (700, 350, 175, 70), (700, 350, 350, 7), (700, 350, 175, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.8569524655708574
		Test accuracy: 0.5046604527296937



Eight songs: ['Frozen', 'Hakuna', 'Mamma', 'Panther', 'Potter', 'Rain', 'Showman', 'StarWars']
	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9983361064891847
		Test accuracy: 0.5366056572379367

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9850249584026622
		Test accuracy: 0.5058236272878536

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9154187465335551
		Test accuracy: 0.4633943427620632

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9972268441486412
		Test accuracy: 0.5074875207986689

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9764281752634498
		Test accuracy: 0.5232945091514143

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.8422074320576817
		Test accuracy: 0.44093178036605657

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9839156960621187
		Test accuracy: 0.5366056572379367

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.99528563505269
		Test accuracy: 0.5465890183028286

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9841930116472546
		Test accuracy: 0.5257903494176372

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9115363283416528
		Test accuracy: 0.4700499168053245

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9908485856905158
		Test accuracy: 0.5232945091514143

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.963948973932335
		Test accuracy: 0.4933444259567388

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9442595673876872
		Test accuracy: 0.4800332778702163

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9972268441486412
		Test accuracy: 0.4983361064891847

	MLPClassifier(hidden_layer_sizes=[(700, 700, 70), (700, 700, 7), (700, 700, 350, 7), (700, 350, 70, 7), (700, 700, 700, 350), (700, 700, 700, 7), (700, 700, 700, 700), (700, 700, 700), (700, 350, 175, 70), (700, 350, 175, 7), (700, 350, 175, 175), (700, 350, 350, 7), (700, 350, 175, 70, 7), (700, 700, 175, 70, 7), (700, 350, 350, 70, 7)], random_state=12345, max_iter=500)
		Train accuracy: 0.9342762063227953
		Test accuracy: 0.4966722129783694



